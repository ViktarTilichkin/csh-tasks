// 1. Вы вводите значение с клавиатуры. Если значение равно 0, то вывести ‘Ноль’,
// если < 0, то вывести ‘Отрицательное’, если > 0, то вывести ‘Положительное’


// 2. Вы вводите значение с клавиатуры. Если значение четное, то вывести true, в
// противном случае false


// 3. Пользователь вводит с клавиатуры число. Найдите корень введенного числа
// (если же результат – число с плавающей точкой, то округлить до 2 знаков после
// запятой).


// 4. Пользователь вводит с клавиатуры 2 числа: a и b. Проверьте, что a делится без
// остатка на b. Если это так - выведите 'Делится' и результат деления, иначе
// выведите 'Делится с остатком' и остаток от деления


// 5. Пользователь вводит с клавиатуры число. Найдите корень введенного числа
// (если же результат – число с плавающей точкой, то округлить то целых)


// 6. Даны три числа a, b, c. Напишите программу, которая находит корни квадратного
// уравнения
// ax^2 + bx + c = 0
// Если уравнение имеет два корня, то следует вывести их в порядке возрастания.


// 7. Пользователь вводит число от 1 до 9999 (сумму выдачи в банкомате). Необходимо
// вывести на экран словами введенную сумму и в конце написать название валюты
// с правильным окончанием. Например: 7431 – семь тысяч четыреста тридцать один
// доллар, 2149 – две тысячи сто сорок девять долларов, 15 – пятнадцать долларов, 3 –
// три доллара.


// 8. Пользователь вводит порядковый номер пальца руки. Необходимо показать его
// название на экран.


// 9. Необходимо написать программу, которая проверяет пользователя на знание
// таблицы умножения. Пользователь сам вводит два целых однозначных числа.
// Программа задаёт вопрос: результат умножения первого числа на
// второе. Пользователь должен ввести ответ и увидеть на экране правильно он
// ответил или нет. Если нет – показать еще и правильный результат.


// 10. Пользователь вводит два числа, если хотя бы одно число равно 0 то необходимо
// получить битовую инверсию числа не равного 0, если первое число больше 20,
// необходимо найти остаток от делания большего на меньшее, если второе меньше
// 0 найти модуль целой часть от деления первого числа на второе, если первое и
// второе числа чётные найти логическое битовое И для двух чисел, в противном
// случае логическое битовое ИЛИ. Для полученного результата произвести
// битовый сдвиг который укажет пользователь, если сдвиг четный, то сдвиг вправо,
// если нечетный влево. Полученный результат вывести на экран
